import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import {
  DescribeVpcConnectionRequest,
  DescribeVpcConnectionResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface DescribeVpcConnectionCommandInput
  extends DescribeVpcConnectionRequest {}
export interface DescribeVpcConnectionCommandOutput
  extends DescribeVpcConnectionResponse,
    __MetadataBearer {}
export declare class DescribeVpcConnectionCommand extends $Command<
  DescribeVpcConnectionCommandInput,
  DescribeVpcConnectionCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: DescribeVpcConnectionCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeVpcConnectionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DescribeVpcConnectionCommandInput,
    DescribeVpcConnectionCommandOutput
  >;
  private serialize;
  private deserialize;
}
