import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import {
  ListScramSecretsRequest,
  ListScramSecretsResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface ListScramSecretsCommandInput extends ListScramSecretsRequest {}
export interface ListScramSecretsCommandOutput
  extends ListScramSecretsResponse,
    __MetadataBearer {}
export declare class ListScramSecretsCommand extends $Command<
  ListScramSecretsCommandInput,
  ListScramSecretsCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: ListScramSecretsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ListScramSecretsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<ListScramSecretsCommandInput, ListScramSecretsCommandOutput>;
  private serialize;
  private deserialize;
}
