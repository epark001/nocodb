import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import {
  UpdateConfigurationRequest,
  UpdateConfigurationResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface UpdateConfigurationCommandInput
  extends UpdateConfigurationRequest {}
export interface UpdateConfigurationCommandOutput
  extends UpdateConfigurationResponse,
    __MetadataBearer {}
export declare class UpdateConfigurationCommand extends $Command<
  UpdateConfigurationCommandInput,
  UpdateConfigurationCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: UpdateConfigurationCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: UpdateConfigurationCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<UpdateConfigurationCommandInput, UpdateConfigurationCommandOutput>;
  private serialize;
  private deserialize;
}
