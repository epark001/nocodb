import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import {
  ListClientVpcConnectionsRequest,
  ListClientVpcConnectionsResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface ListClientVpcConnectionsCommandInput
  extends ListClientVpcConnectionsRequest {}
export interface ListClientVpcConnectionsCommandOutput
  extends ListClientVpcConnectionsResponse,
    __MetadataBearer {}
export declare class ListClientVpcConnectionsCommand extends $Command<
  ListClientVpcConnectionsCommandInput,
  ListClientVpcConnectionsCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: ListClientVpcConnectionsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ListClientVpcConnectionsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    ListClientVpcConnectionsCommandInput,
    ListClientVpcConnectionsCommandOutput
  >;
  private serialize;
  private deserialize;
}
