import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import { RebootBrokerRequest, RebootBrokerResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface RebootBrokerCommandInput extends RebootBrokerRequest {}
export interface RebootBrokerCommandOutput
  extends RebootBrokerResponse,
    __MetadataBearer {}
export declare class RebootBrokerCommand extends $Command<
  RebootBrokerCommandInput,
  RebootBrokerCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: RebootBrokerCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: RebootBrokerCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<RebootBrokerCommandInput, RebootBrokerCommandOutput>;
  private serialize;
  private deserialize;
}
