import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import {
  GetBootstrapBrokersRequest,
  GetBootstrapBrokersResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetBootstrapBrokersCommandInput
  extends GetBootstrapBrokersRequest {}
export interface GetBootstrapBrokersCommandOutput
  extends GetBootstrapBrokersResponse,
    __MetadataBearer {}
export declare class GetBootstrapBrokersCommand extends $Command<
  GetBootstrapBrokersCommandInput,
  GetBootstrapBrokersCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: GetBootstrapBrokersCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetBootstrapBrokersCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetBootstrapBrokersCommandInput, GetBootstrapBrokersCommandOutput>;
  private serialize;
  private deserialize;
}
