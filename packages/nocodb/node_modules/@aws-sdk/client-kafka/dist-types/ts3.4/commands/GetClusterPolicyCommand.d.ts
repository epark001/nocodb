import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import {
  GetClusterPolicyRequest,
  GetClusterPolicyResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetClusterPolicyCommandInput extends GetClusterPolicyRequest {}
export interface GetClusterPolicyCommandOutput
  extends GetClusterPolicyResponse,
    __MetadataBearer {}
export declare class GetClusterPolicyCommand extends $Command<
  GetClusterPolicyCommandInput,
  GetClusterPolicyCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: GetClusterPolicyCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetClusterPolicyCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetClusterPolicyCommandInput, GetClusterPolicyCommandOutput>;
  private serialize;
  private deserialize;
}
