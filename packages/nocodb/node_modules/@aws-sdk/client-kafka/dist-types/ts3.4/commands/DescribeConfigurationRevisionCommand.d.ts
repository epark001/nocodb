import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import {
  DescribeConfigurationRevisionRequest,
  DescribeConfigurationRevisionResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface DescribeConfigurationRevisionCommandInput
  extends DescribeConfigurationRevisionRequest {}
export interface DescribeConfigurationRevisionCommandOutput
  extends DescribeConfigurationRevisionResponse,
    __MetadataBearer {}
export declare class DescribeConfigurationRevisionCommand extends $Command<
  DescribeConfigurationRevisionCommandInput,
  DescribeConfigurationRevisionCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: DescribeConfigurationRevisionCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeConfigurationRevisionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DescribeConfigurationRevisionCommandInput,
    DescribeConfigurationRevisionCommandOutput
  >;
  private serialize;
  private deserialize;
}
