var be=Object.defineProperty;var Me=(l,u,i)=>u in l?be(l,u,{enumerable:!0,configurable:!0,writable:!0,value:i}):l[u]=i;var J=(l,u,i)=>(Me(l,typeof u!="symbol"?u+"":u,i),i);import{_ as Ue}from"./Icon.vue.1162f18b.js";import{a as Fe,u as ke}from"./EditOrAddProvider.vue.09b12d8b.js";import{h as Be,cd as a,T as We,$ as Ge,r as w,i as Z,fF as Pe,fJ as $e,k as qe,gq as j,gr as He,o as T,c as P,b as L,w as M,E as I,C as K,I as Xe,W,b6 as ee,cF as Y,cA as je,a as D,t as $,d as q,aj as Ke,cp as Ye,D as te,F as De,fO as Qe,ap as Ve,cO as Q}from"./entry.51f4e399.js";import{M as ze}from"./index.5263eb1d.js";import{i as Je}from"./index.e5ddde08.js";import{_ as Ze}from"./index.540347c5.js";import{b as et,_ as tt,a as at}from"./index.5a908291.js";import{_ as nt}from"./TextArea.442a25cb.js";import{_ as st}from"./FormItem.cda40628.js";import{_ as ot}from"./index.fbcca285.js";import"./Button.vue.793bcd1d.js";import"./index.0db47614.js";import"./debounce.7d32c110.js";import"./toNumber.9dc54e53.js";import"./isSymbol.b53bd26f.js";import"./_plugin-vue_export-helper.c27b6911.js";import"./useBetaFeatureToggle.5dbba600.js";import"./validation.6db726f3.js";import"./useMetas.ba7abae7.js";import"./index.de92142d.js";import"./useSize.3b3f469f.js";import"./identity.dd5da9ba.js";import"./_flatRest.ff2d3d5c.js";import"./isPlainObject.ecf52d25.js";import"./_getPrototype.ec1165af.js";import"./FormItemContext.e001cd7c.js";import"./index.e760d172.js";import"./Input.7cb175ff.js";import"./antInputDirective.8ac36ea7.js";import"./SearchOutlined.dec109ce.js";import"./Password.d493e47a.js";import"./index.0d6d8ba8.js";import"./Checkbox.a529f1e6.js";import"./createForOfIteratorHelper.12419aa5.js";import"./index.5e746f62.js";import"./toArray.06afb623.js";import"./isMobile.e2e89480.js";import"./useMemo.b13a9257.js";import"./useMergedState.5e6500b1.js";import"./useState.6010d8b6.js";import"./DownOutlined.db6f6406.js";import"./CheckOutlined.ef30fafc.js";import"./isNumeric.3f69e2aa.js";import"./index.09b19c06.js";import"./LeftOutlined.3bb8aa17.js";import"./RightOutlined.90e8180f.js";import"./useBreakpoint.a91853f1.js";import"./responsiveObserve.501a6cf9.js";import"./Col.88cfabc0.js";import"./eagerComputed.6062ac13.js";class it{constructor(){J(this,"trie");J(this,"suggestions");this.trie={},this.suggestions=[]}newNode(){return{value:[],isLeaf:!1,children:{}}}add(u){Object.keys(this.trie).length===0&&(this.trie=this.newNode());let i=this.trie;for(const f of u.text.toLowerCase())f in i.children||(i.children[f]=this.newNode()),i=i.children[f];i.value=i.value||[],i.value.push(u),i.isLeaf=!0}find(u){Object.keys(this.trie).length===0&&(this.trie=this.newNode());let i=this.trie;for(const f of u)if(f in i.children)i=i.children[f];else return null;return i}traverse(u){u.isLeaf&&this.suggestions.push(...u.value);for(const i in u.children)this.traverse(u.children[i])}complete(u,i=null){this.suggestions=[];const f=this.find(u.toLowerCase());if(!f||Object.keys(f).length===0)return this.suggestions;this.suggestions.push(...f.value);const h=f.children;let U=0;for(const O in h)if(this.traverse(h[O]),U++,i&&U===i)break;return this.suggestions}}const n={NUMERIC:"numeric",STRING:"string",DATE:"date",LOGICAL:"logical",COND_EXP:"conditional_expression"},x={AVG:{type:n.NUMERIC,validation:{args:{min:1}},description:"Average of input parameters",syntax:"AVG(value1, [value2, ...])",examples:["AVG(10, 5) => 7.5","AVG({column1}, {column2})","AVG({column1}, {column2}, {column3})"]},ADD:{type:n.NUMERIC,validation:{args:{min:1}},description:"Sum of input parameters",syntax:"ADD(value1, [value2, ...])",examples:["ADD(5, 5) => 10","ADD({column1}, {column2})","ADD({column1}, {column2}, {column3})"]},DATEADD:{type:n.DATE,validation:{args:{rqd:3}},description:'Adds a "count" units to Datetime.',syntax:'DATEADD(date | datetime, value, ["day" | "week" | "month" | "year"])',examples:['DATEADD({column1}, 2, "day")','DATEADD({column1}, -2, "day")','DATEADD({column1}, 2, "week")','DATEADD({column1}, -2, "week")','DATEADD({column1}, 2, "month")','DATEADD({column1}, -2, "month")','DATEADD({column1}, 2, "year")','DATEADD({column1}, -2, "year")']},DATETIME_DIFF:{type:n.DATE,validation:{args:{min:2,max:3}},description:"Calculate the difference of two given date / datetime in specified units.",syntax:'DATETIME_DIFF(date | datetime, date | datetime, ["milliseconds" | "ms" | "seconds" | "s" | "minutes" | "m" | "hours" | "h" | "days" | "d" | "weeks" | "w" | "months" | "M" | "quarters" | "Q" | "years" | "y"])',examples:["DATEDIFF({column1}, {column2})",'DATEDIFF({column1}, {column2}, "seconds")','DATEDIFF({column1}, {column2}, "s")','DATEDIFF({column1}, {column2}, "years")','DATEDIFF({column1}, {column2}, "y")','DATEDIFF({column1}, {column2}, "minutes")','DATEDIFF({column1}, {column2}, "m")','DATEDIFF({column1}, {column2}, "days")','DATEDIFF({column1}, {column2}, "d")']},AND:{type:n.COND_EXP,validation:{args:{min:1}},description:"TRUE if all expr evaluate to TRUE",syntax:"AND(expr1, [expr2, ...])",examples:["AND(5 > 2, 5 < 10) => 1","AND({column1} > 2, {column2} < 10)"]},OR:{type:n.COND_EXP,validation:{args:{min:1}},description:"TRUE if at least one expr evaluates to TRUE",syntax:"OR(expr1, [expr2, ...])",examples:["OR(5 > 2, 5 < 10) => 1","OR({column1} > 2, {column2} < 10)"]},CONCAT:{type:n.STRING,validation:{args:{min:1}},description:"Concatenated string of input parameters",syntax:"CONCAT(str1, [str2, ...])",examples:['CONCAT("AA", "BB", "CC") => "AABBCC"',"CONCAT({column1}, {column2}, {column3})"]},TRIM:{type:n.STRING,validation:{args:{rqd:1}},description:"Remove trailing and leading whitespaces from input parameter",syntax:"TRIM(str)",examples:['TRIM("         HELLO WORLD  ") => "HELLO WORLD"',"TRIM({column1})"]},UPPER:{type:n.STRING,validation:{args:{rqd:1}},description:"Upper case converted string of input parameter",syntax:"UPPER(str)",examples:['UPPER("nocodb") => "NOCODB"',"UPPER({column1})"]},LOWER:{type:n.STRING,validation:{args:{rqd:1}},description:"Lower case converted string of input parameter",syntax:"LOWER(str)",examples:['LOWER("NOCODB") => "nocodb"',"LOWER({column1})"]},LEN:{type:n.STRING,validation:{args:{rqd:1}},description:"Input parameter character length",syntax:"LEN(value)",examples:['LEN("NocoDB") => 6',"LEN({column1})"]},MIN:{type:n.NUMERIC,validation:{args:{min:1}},description:"Minimum value amongst input parameters",syntax:"MIN(value1, [value2, ...])",examples:["MIN(1000, 2000) => 1000","MIN({column1}, {column2})"]},MAX:{type:n.NUMERIC,validation:{args:{min:1}},description:"Maximum value amongst input parameters",syntax:"MAX(value1, [value2, ...])",examples:["MAX(1000, 2000) => 2000","MAX({column1}, {column2})"]},CEILING:{type:n.NUMERIC,validation:{args:{rqd:1}},description:"Rounded next largest integer value of input parameter",syntax:"CEILING(value)",examples:["CEILING(1.01) => 2","CEILING({column1})"]},FLOOR:{type:n.NUMERIC,validation:{args:{rqd:1}},description:"Rounded largest integer less than or equal to input parameter",syntax:"FLOOR(value)",examples:["FLOOR(3.1415) => 3","FLOOR({column1})"]},ROUND:{type:n.NUMERIC,validation:{args:{min:1,max:2}},description:"Rounded number to a specified number of decimal places or the nearest integer if not specified",syntax:"ROUND(value, precision), ROUND(value)",examples:["ROUND(3.1415) => 3","ROUND(3.1415, 2) => 3.14","ROUND({column1}, 3)"]},MOD:{type:n.NUMERIC,validation:{args:{rqd:2}},description:"Remainder after integer division of input parameters",syntax:"MOD(value1, value2)",examples:["MOD(1024, 1000) => 24","MOD({column}, 2)"]},REPEAT:{type:n.STRING,validation:{args:{rqd:2}},description:"Specified copies of the input parameter string concatenated together",syntax:"REPEAT(str, count)",examples:['REPEAT("A", 5) => "AAAAA"',"REPEAT({column}, 5)"]},LOG:{type:n.NUMERIC,validation:{},description:"Logarithm of input parameter to the base (default = e) specified",syntax:"LOG([base], value)",examples:["LOG(2, 1024) => 10","LOG(2, {column1})"]},EXP:{type:n.NUMERIC,validation:{},description:"Exponential value of input parameter (e ^ power)",syntax:"EXP(power)",examples:["EXP(1) => 2.718281828459045","EXP({column1})"]},POWER:{type:n.NUMERIC,validation:{args:{rqd:2}},description:"base to the exponent power, as in base ^ exponent",syntax:"POWER(base, exponent)",examples:["POWER(2, 10) => 1024","POWER({column1}, 10)"]},SQRT:{type:n.NUMERIC,validation:{args:{rqd:1}},description:"Square root of the input parameter",syntax:"SQRT(value)",examples:["SQRT(100) => 10","SQRT({column1})"]},ABS:{type:n.NUMERIC,validation:{args:{rqd:1}},description:"Absolute value of the input parameter",syntax:"ABS(value)",examples:["ABS({column1})"]},NOW:{type:n.DATE,validation:{args:{rqd:0}},description:"Returns the current time and day",syntax:"NOW()",examples:["NOW() => 2022-05-19 17:20:43"]},REPLACE:{type:n.STRING,validation:{args:{rqd:3}},description:"String, after replacing all occurrences of srchStr with rplcStr",syntax:"REPLACE(str, srchStr, rplcStr)",examples:['REPLACE("AABBCC", "AA", "BB") => "BBBBCC"',"REPLACE({column1}, {column2}, {column3})"]},SEARCH:{type:n.STRING,validation:{args:{rqd:2}},description:"Index of srchStr specified if found, 0 otherwise",syntax:"SEARCH(str, srchStr)",examples:['SEARCH("HELLO WORLD", "WORLD") => 7','SEARCH({column1}, "abc")']},INT:{type:n.NUMERIC,validation:{args:{rqd:1}},description:"Integer value of input parameter",syntax:"INT(value)",examples:["INT(3.1415) => 3","INT({column1})"]},RIGHT:{type:n.STRING,validation:{args:{rqd:2}},description:"n characters from the end of input parameter",syntax:"RIGHT(str, n)",examples:['RIGHT("HELLO WORLD", 5) => WORLD',"RIGHT({column1}, 3)"]},LEFT:{type:n.STRING,validation:{args:{rqd:2}},description:"n characters from the beginning of input parameter",syntax:"LEFT(str, n)",examples:["LEFT({column1}, 2)",'LEFT("ABCD", 2) => "AB"']},SUBSTR:{type:n.STRING,validation:{args:{min:2,max:3}},description:"Substring of length n of input string from the postition specified",syntax:"	SUBTR(str, position, [n])",examples:['SUBSTR("HELLO WORLD", 7) => WORLD','SUBSTR("HELLO WORLD", 7, 3) => WOR',"SUBSTR({column1}, 7, 5)"]},MID:{type:n.STRING,validation:{args:{rqd:3}},description:"Alias for SUBSTR",syntax:"MID(str, position, [count])",examples:['MID("NocoDB", 3, 2) => "co"',"MID({column1}, 3, 2)"]},IF:{type:n.COND_EXP,validation:{args:{min:2,max:3}},description:"SuccessCase if expr evaluates to TRUE, elseCase otherwise",syntax:"IF(expr, successCase, elseCase)",examples:['IF(5 > 1, "YES", "NO") => "YES"','IF({column} > 1, "YES", "NO")']},SWITCH:{type:n.COND_EXP,validation:{args:{min:3}},description:"Switch case value based on expr output",syntax:"SWITCH(expr, [pattern, value, ..., default])",examples:['SWITCH(1, 1, "One", 2, "Two", "N/A") => "One""','SWITCH(2, 1, "One", 2, "Two", "N/A") => "Two"','SWITCH(3, 1, "One", 2, "Two", "N/A") => "N/A"','SWITCH({column1}, 1, "One", 2, "Two", "N/A")']},URL:{type:n.STRING,validation:{args:{rqd:1}},description:"Convert to a hyperlink if it is a valid URL",syntax:"URL(str)",examples:['URL("https://github.com/nocodb/nocodb")',"URL({column1})"]},WEEKDAY:{type:n.NUMERIC,validation:{args:{min:1,max:2}},description:"Returns the day of the week as an integer between 0 and 6 inclusive starting from Monday by default",syntax:"WEEKDAY(date, [startDayOfWeek])",examples:['WEEKDAY("2021-06-09")','WEEKDAY(NOW(), "sunday")']}},lt=Object.keys(x);function ae(l,u,i=0,f=0){if(l.selectionStart||l.selectionStart===0){const h=l.selectionStart,U=l.selectionEnd;l.value=l.value.substring(0,h-i)+u+l.value.substring(U,l.value.length);const O=+h-i+u.length-f;if(l.setSelectionRange)l.focus(),l.setSelectionRange(O,O);else if(l.createTextRange){const F=l.createTextRange();F.collapse(!0),F.moveEnd("character",O),F.moveStart("character",O),F.select()}}else l.value+=u;return l.value}function ut(l,u){const i=l.substring(0,u);if(i.indexOf(" ")>0){const f=i.split(" ");return f[f.length-1]}else return i}function rt(l){const u=ct(l);return ut(l.value,u)||""}function ct(l){let u=0;return(l.selectionStart||l.selectionStart===0)&&(u=l.selectionStart),u}const mt={class:"formula-wrapper"},dt=D("div",{class:"text-gray-600 mt-2 mb-4 prose-sm"},[q(" Hint: Use {} to reference columns, e.g: {column_name}. For more, please check out "),D("a",{class:"prose-sm",href:"https://docs.nocodb.com/setup-and-usages/formulas#available-formula-features",target:"_blank"}," Formulas. ")],-1),pt={class:"h-[250px] overflow-auto scrollbar-thin-primary"},ft={class:"flex"},vt={class:"prose-sm text-gray-600"},gt={key:0,class:"text-xs text-gray-500"},ht=D("br",null,null,-1),yt=D("br",null,null,-1),Dt=D("br",null,null,-1),Et=D("br",null,null,-1),xt=D("br",null,null,-1),Rt=D("br",null,null,-1),At={key:1,class:"float-right mr-5 -mt-2"},xa=Be({__name:"FormulaOptions",props:{value:{}},emits:["update:value"],setup(l,{emit:u}){var de,pe,fe,ve,ge,he,ye;const i=l,f=[a.QrCode,a.Barcode],h=We(i,"value",u),{formState:U,setAdditionalValidations:O,validateInfos:F,sqlUi:Ee,column:R}=Fe(),{loadMagic:xe,predictFunction:Re}=ke(),b=Ge(ze,w()),S=Z(()=>{var t,e;return((e=(t=b==null?void 0:b.value)==null?void 0:t.columns)==null?void 0:e.filter(s=>!f.includes(s.uidt)))||[]}),Ae={formula_raw:[{validator:(t,e)=>new Promise((s,c)=>{if(!(e!=null&&e.trim()))return c(new Error("Required"));const g=Ce(e);if(g!==!0)return c(new Error(g));s()})}]},ne=lt,se=["+","-","*","/",">","<","==","<=",">=","!="],oe=w(!1),k=w(),ie=w(),V=w([]),H=w(""),E=w(0),le={column:0,function:1,op:2},G=Z(()=>{const t=Ee.value.getUnsupportedFnList();return[...ne.filter(e=>!t.includes(e)).map(e=>({text:`${e}()`,type:"function",description:x[e].description,syntax:x[e].syntax,examples:x[e].examples})),...S.value.filter(e=>{var s;return e.uidt===a.LinkToAnotherRecord&&e.system?!1:R?((s=R.value)==null?void 0:s.id)!==e.id:!0}).map(e=>({text:e.title,type:"column",icon:Pe(e.uidt),uidt:e.uidt})),...se.map(e=>({text:e,type:"op"}))]}),v=w(G.value),_e=Z(()=>{const t=new it;for(const e of G.value)t.add(e);return t});function Ce(t){try{const e=j(t),s=X(e);return s.size?[...s].join(", "):!0}catch(e){return e.message}}function X(t,e=new Set,s=new Set){var c,g;if(t.type==="CallExpression"){const r=t.callee.name.toUpperCase();ne.includes(r)||e.add(`'${r}' function is not available`);const d=x[r]&&x[r].validation;if(d&&d.args&&(d.args.rqd!==void 0&&d.args.rqd!==t.arguments.length?e.add(`'${r}' required ${d.args.rqd} arguments`):d.args.min!==void 0&&d.args.min>t.arguments.length?e.add(`'${r}' required minimum ${d.args.min} arguments`):d.args.max!==void 0&&d.args.max<t.arguments.length&&e.add(`'${r}' required maximum ${d.args.max} arguments`)),t.arguments.map(A=>X(A,e)),t.callee.type==="Identifier"){const A=x[r.toUpperCase()].type;A===n.NUMERIC?r==="WEEKDAY"?(N(t.arguments[0],n.DATE,o=>{Q(o)||s.add("The first parameter of WEEKDAY() should have date value")},s),N(t.arguments[1],n.STRING,o=>{(typeof o!="string"||!["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].includes(o.toLowerCase()))&&s.add('The second parameter of WEEKDAY() should have the value either "sunday", "monday", "tuesday", "wednesday", "thursday", "friday" or "saturday"')},s)):t.arguments.map(o=>N(o,A,null,s)):A===n.DATE&&(r==="DATEADD"?(N(t.arguments[0],n.DATE,o=>{Q(o)||s.add("The first parameter of DATEADD() should have date value")},s),N(t.arguments[1],n.NUMERIC,o=>{typeof o!="number"&&s.add("The second parameter of DATEADD() should have numeric value")},s),N(t.arguments[2],n.STRING,o=>{["day","week","month","year"].includes(o)||s.add('The third parameter of DATEADD() should have the value either "day", "week", "month" or "year"')},s)):r==="DATETIME_DIFF"&&(N(t.arguments[0],n.DATE,o=>{Q(o)||s.add("The first parameter of DATETIME_DIFF() should have date value")},s),N(t.arguments[1],n.DATE,o=>{Q(o)||s.add("The second parameter of DATETIME_DIFF() should have date value")},s),N(t.arguments[2],n.STRING,o=>{["milliseconds","ms","seconds","s","minutes","m","hours","h","days","d","weeks","w","months","M","quarters","Q","years","y"].includes(o)||s.add('The third parameter of DATETIME_DIFF() should have value either "milliseconds", "ms", "seconds", "s", "minutes", "m", "hours", "h", "days", "d", "weeks", "w", "months", "M", "quarters", "Q", "years", or "y"')},s)))}e=new Set([...e,...s])}else if(t.type==="Identifier"){S.value.filter(o=>{var p;return!R||((p=R.value)==null?void 0:p.id)!==o.id}).every(o=>o.title!==t.name)&&e.add(`Column '${t.name}' is not available`);const r=S.value.filter(o=>{var p;return o.id!==((p=R.value)==null?void 0:p.id)&&o.uidt===a.Formula}).reduce((o,p)=>{const m=[...new Set((p.colOptions.formula.match(/cl_\w{14}/g)||[]).filter(B=>S.value.filter(y=>y.id===B&&y.uidt===a.Formula).length))];return m.length>0&&o.push({[p.id]:m}),o},[]),d=S.value.find(o=>o.title===t.name&&o.uidt===a.Formula);d&&((c=R.value)!=null&&c.id)&&r.push({[(g=R.value)==null?void 0:g.id]:[d.id]});const A=r.length;if(A>0){const o=new Map,p=new Map;for(const[y,_]of Object.entries(r)){const C=Object.keys(_)[0],Le=_[C];p.set(C,p.get(C)||0);for(const z of Le)o.set(C,(o.get(C)||new Set).add(z)),p.set(z,(p.get(z)||0)+1)}const m=[];p.forEach((y,_)=>{y===0&&m.push(_)});let B=0;for(;m.length!==0;){const y=m.shift(),_=o.get(y)||new Set;_.size>0&&(B+=1),_.forEach(C=>{p.set(C,p.get(C)-1),p.get(C)===0&&m.push(C)})}A!==B&&e.add("Can’t save field because it causes a circular reference")}}else t.type==="BinaryExpression"?(se.includes(t.operator)||e.add(`'${t.operator}' operation is not available`),X(t.left,e),X(t.right,e)):t.type==="Literal"||t.type==="UnaryExpression"||(t.type==="Compound"?t.body.length&&e.add("Can’t save field because the formula is invalid"):e.add("Can’t save field because the formula is invalid"));return e}function N(t,e,s,c=new Set){var g;if(t===!1||typeof t>"u")return c;if(t.type==="Literal")typeof s=="function"?s(t.value):e===n.NUMERIC?typeof t.value!="number"&&c.add("Numeric type is expected"):e===n.STRING&&typeof t.value!="string"&&c.add("string type is expected");else if(t.type==="Identifier"){const r=S.value.find(d=>d.title===t.name);if(r===void 0)return;if(r.uidt===a.Formula){const d=ue(j(r.formula_raw));d==="N/A"?c.add(`Not supported to reference column ${r.title}`):e!==d&&c.add(`Type ${e} is expected but found Type ${d}`)}else switch(r.uidt){case a.SingleLineText:case a.LongText:case a.MultiSelect:case a.SingleSelect:case a.PhoneNumber:case a.Email:case a.URL:e!==n.STRING&&c.add(`Column '${t.name}' with ${n.STRING} type is found but ${e} type is expected`);break;case a.Year:case a.Number:case a.Decimal:case a.Rating:case a.Count:case a.AutoNumber:case a.Currency:e!==n.NUMERIC&&c.add(`Column '${t.name}' with ${n.NUMERIC} type is found but ${e} type is expected`);break;case a.Date:case a.DateTime:case a.CreateTime:case a.LastModifiedTime:e!==n.DATE&&c.add(`Column '${t.name}' with ${n.DATE} type is found but ${e} type is expected`);break;case a.ForeignKey:case a.Attachment:case a.ID:case a.Time:case a.Percent:case a.Duration:case a.Rollup:case a.Lookup:case a.Barcode:case a.Button:case a.Checkbox:case a.Collaborator:case a.QrCode:default:c.add(`Not supported to reference column '${t.name}'`);break}}else if(t.type==="UnaryExpression"||t.type==="BinaryExpression")e!==n.NUMERIC&&c.add(`${n.NUMERIC} type is found but ${e} type is expected`);else if(t.type==="CallExpression"){const r=t.callee.name.toUpperCase();(g=x[r])!=null&&g.type&&e!==x[r].type&&c.add(`${e} not matched with ${x[r].type}`)}return c}function ue(t){if(t.type==="CallExpression")return x[t.callee.name.toUpperCase()].type;if(t.type==="Identifier"){const e=S.value.find(s=>s.title===t.name);if((e==null?void 0:e.uidt)===a.Formula)return ue(j(e==null?void 0:e.formula_raw));switch(e==null?void 0:e.uidt){case a.SingleLineText:case a.LongText:case a.MultiSelect:case a.SingleSelect:case a.PhoneNumber:case a.Email:case a.URL:return n.STRING;case a.Year:case a.Number:case a.Decimal:case a.Rating:case a.Count:case a.AutoNumber:return n.NUMERIC;case a.Date:case a.DateTime:case a.CreateTime:case a.LastModifiedTime:return n.DATE;case a.ForeignKey:case a.Attachment:case a.ID:case a.Time:case a.Currency:case a.Percent:case a.Duration:case a.Rollup:case a.Lookup:case a.Barcode:case a.Button:case a.Checkbox:case a.Collaborator:case a.QrCode:default:return"N/A"}}else return t.type==="BinaryExpression"||t.type==="UnaryExpression"?n.NUMERIC:t.type==="Literal"?typeof t.value:"N/A"}function re(){const t=(k.value.$el.value.match(/\{|}/g)||[]).reduce((e,s)=>(e[s]=(e[s]||0)+1,e),{});return(t["{"]||0)===(t["}"]||0)}function ce(t){var c;const e=t.text,s=((c=H.value)==null?void 0:c.length)||0;t.type==="function"?h.value.formula_raw=ae(k.value.$el,e,s,1):t.type==="column"?h.value.formula_raw=ae(k.value.$el,`{${e}}`,s+ +!re()):h.value.formula_raw=ae(k.value.$el,e,s),oe.value=!1,H.value="",t.type==="function"||t.type==="op"?v.value=G.value.filter(g=>g.type==="column"):v.value=G.value}const Ie=Qe(function(){Ne()},250);function Ne(){var s;E.value=0,v.value=[];const e=rt(k.value.$el).split(/\W+/);H.value=e.pop()||"",v.value=(s=_e.value.complete(H.value))==null?void 0:s.sort((c,g)=>le[c.type]-le[g.type]),re()||(v.value=v.value.filter(c=>c.type==="column")),oe.value=!!v.value.length}function Te(){v.value&&E.value>-1&&E.value<v.value.length&&ce(v.value[E.value])}function Oe(){v.value&&(E.value=--E.value>-1?E.value:v.value.length-1,me())}function Se(){v.value&&(E.value=++E.value%v.value.length,me())}function me(){Ve(()=>{if(V.value[E.value])try{ie.value.$el.scrollTo({top:V.value[E.value].$el.offsetTop,behavior:"smooth"})}catch{}})}(pe=(de=R.value)==null?void 0:de.colOptions)!=null&&pe.formula_raw&&(h.value.formula_raw=$e((ve=(fe=R.value)==null?void 0:fe.colOptions)==null?void 0:ve.formula,(ge=b==null?void 0:b.value)==null?void 0:ge.columns,(ye=(he=R.value)==null?void 0:he.colOptions)==null?void 0:ye.formula_raw)||""),O({...Ae}),qe(()=>{j.plugins.register(He)});const we=async()=>{await Re(U,b,S,G,h)};return(t,e)=>{const s=Ue,c=nt,g=st,r=ot,d=Ze,A=et,o=tt,p=at;return T(),P("div",mt,[L(g,je(I(F).formula_raw,{label:"Formula"}),{default:M(()=>[I(Je)?(T(),K(s,{key:0,icon:"magic",class:Xe([{"nc-animation-pulse":I(xe)},"text-orange-400 cursor-pointer absolute right-1 top-1 z-10"]),onClick:e[0]||(e[0]=m=>we())},null,8,["class"])):W("",!0),L(c,{ref_key:"formulaRef",ref:k,value:I(h).formula_raw,"onUpdate:value":e[1]||(e[1]=m=>I(h).formula_raw=m),class:"mb-2 nc-formula-input",onKeydown:[ee(Y(Se,["prevent"]),["down"]),ee(Y(Oe,["prevent"]),["up"]),ee(Y(Te,["prevent"]),["enter"])],onChange:I(Ie)},null,8,["value","onKeydown","onChange"])]),_:1},16),dt,D("div",pt,[L(p,{ref_key:"sugListRef",ref:ie,"data-source":I(v),locale:{emptyText:"No suggested formula was found"}},{renderItem:M(({item:m,index:B})=>[L(o,{ref:y=>{I(V)[B]=y},class:"cursor-pointer",onClick:Y(y=>ce(m),["prevent","stop"])},{default:M(()=>[L(A,null,{title:M(()=>[D("div",ft,[L(r,{span:6},{default:M(()=>[D("span",vt,$(m.text),1)]),_:2},1024),L(r,{span:18},{default:M(()=>[m.type==="function"?(T(),P("div",gt,[q($(m.description)+" ",1),ht,yt,q(" Syntax: "),Dt,q(" "+$(m.syntax)+" ",1),Et,xt,q(" Examples: "),Rt,(T(!0),P(Ke,null,Ye(m.examples,(y,_)=>(T(),P("div",{key:_},[D("div",null,"("+$(_+1)+"): "+$(y),1)]))),128))])):W("",!0),m.type==="column"?(T(),P("div",At,[L(d,{text:m.uidt,color:"gray"},null,8,["text"])])):W("",!0)]),_:2},1024)])]),avatar:M(()=>[m.type==="function"?(T(),K(te(I(De).function),{key:0,class:"text-lg"})):W("",!0),m.type==="op"?(T(),K(te(I(De).calculator),{key:1,class:"text-lg"})):W("",!0),m.type==="column"?(T(),K(te(m.icon),{key:2,class:"text-lg"})):W("",!0)]),_:2},1024)]),_:2},1032,["onClick"])]),_:1},8,["data-source"])])])}}});export{xa as default};
