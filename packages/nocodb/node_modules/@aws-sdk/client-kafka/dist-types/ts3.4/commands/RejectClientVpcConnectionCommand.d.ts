import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KafkaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KafkaClient";
import {
  RejectClientVpcConnectionRequest,
  RejectClientVpcConnectionResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface RejectClientVpcConnectionCommandInput
  extends RejectClientVpcConnectionRequest {}
export interface RejectClientVpcConnectionCommandOutput
  extends RejectClientVpcConnectionResponse,
    __MetadataBearer {}
export declare class RejectClientVpcConnectionCommand extends $Command<
  RejectClientVpcConnectionCommandInput,
  RejectClientVpcConnectionCommandOutput,
  KafkaClientResolvedConfig
> {
  readonly input: RejectClientVpcConnectionCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: RejectClientVpcConnectionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KafkaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    RejectClientVpcConnectionCommandInput,
    RejectClientVpcConnectionCommandOutput
  >;
  private serialize;
  private deserialize;
}
