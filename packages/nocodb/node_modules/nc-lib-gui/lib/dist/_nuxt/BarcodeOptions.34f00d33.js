import{h as x,$ as s,r as f,T as R,i as v,gs as y,k as S,aq as q,o as p,C as b,w as l,b as r,cA as k,E as t,a as E,cF as C,c as P,D as $,F as j,W as U,_ as H}from"./entry.51f4e399.js";import{M as L,A as Q,R as W}from"./index.5263eb1d.js";import{u as z}from"./useViewColumns.96f2a704.js";import{a as G}from"./EditOrAddProvider.vue.09b12d8b.js";import{_ as J}from"./index.5e746f62.js";import{_ as K}from"./FormItem.cda40628.js";import{_ as X}from"./index.fbcca285.js";import{_ as Y}from"./index.529d8b39.js";import"./useMetas.ba7abae7.js";import"./index.9e760c64.js";import"./Icon.vue.1162f18b.js";import"./Button.vue.793bcd1d.js";import"./index.0db47614.js";import"./debounce.7d32c110.js";import"./toNumber.9dc54e53.js";import"./isSymbol.b53bd26f.js";import"./_plugin-vue_export-helper.c27b6911.js";import"./useBetaFeatureToggle.5dbba600.js";import"./index.e5ddde08.js";import"./validation.6db726f3.js";import"./index.de92142d.js";import"./useSize.3b3f469f.js";import"./identity.dd5da9ba.js";import"./_flatRest.ff2d3d5c.js";import"./isPlainObject.ecf52d25.js";import"./_getPrototype.ec1165af.js";import"./FormItemContext.e001cd7c.js";import"./index.e760d172.js";import"./Input.7cb175ff.js";import"./antInputDirective.8ac36ea7.js";import"./SearchOutlined.dec109ce.js";import"./TextArea.442a25cb.js";import"./Password.d493e47a.js";import"./index.0d6d8ba8.js";import"./Checkbox.a529f1e6.js";import"./createForOfIteratorHelper.12419aa5.js";import"./toArray.06afb623.js";import"./isMobile.e2e89480.js";import"./useMemo.b13a9257.js";import"./useMergedState.5e6500b1.js";import"./useState.6010d8b6.js";import"./DownOutlined.db6f6406.js";import"./CheckOutlined.ef30fafc.js";import"./Col.88cfabc0.js";import"./responsiveObserve.501a6cf9.js";const Z={class:"flex w-1/2 flex-row items-center"},ee={key:0,class:"pl-2"},oe=E("span",null," The valid Column Types for a Barcode Column are: Number, Single Line Text, Long Text, Phone Number, URL, Email, Decimal. Please create one first. ",-1),ze=x({__name:"BarcodeOptions",props:{modelValue:{}},emits:["update:modelValue"],setup(g,{emit:N}){const A=g,D=s(L,f()),I=s(Q,f()),V=s(W),{fields:B,metaColumnById:F}=z(I,D,()=>V.trigger()),a=R(A,"modelValue",N),{setAdditionalValidations:M,validateInfos:c,column:i}=G(),m=v(()=>{var o;return(o=B.value)==null?void 0:o.filter(e=>e.fk_column_id&&y.includes(F.value[e.fk_column_id].uidt)).map(e=>({value:e.fk_column_id,label:e.title}))}),_=[{value:"CODE128",label:"CODE128"},{value:"upc",label:"UPC"},{value:"EAN13",label:"EAN-13"},{value:"EAN8",label:"EAN-8"},{value:"EAN5",label:"EAN-5"},{value:"EAN2",label:"EAN-2"},{value:"CODE39",label:"CODE39"},{value:"ITF14",label:"ITF-14"},{value:"MSI",label:"MSI"},{value:"PHARMACODE",label:"pharmacode"},{value:"CODABAR",label:"codabar"}];S(()=>{var o,e,n;a.value.meta={barcodeFormat:_[0].value,...a.value.meta},a.value.fk_barcode_value_column_id=((e=(o=i==null?void 0:i.value)==null?void 0:o.colOptions)==null?void 0:e.fk_barcode_value_column_id)||((n=m.value)==null?void 0:n[0])}),q(m,o=>{var e;a.value.fk_barcode_value_column_id==null&&(a.value.fk_barcode_value_column_id=(e=o==null?void 0:o[0])==null?void 0:e.value)}),M({fk_barcode_value_column_id:[{required:!0,message:"Required"}],barcode_format:[{required:!0,message:"Required"}]});const T=v(()=>{var o;return!((o=m.value)!=null&&o.length)});return(o,e)=>{const n=J,h=H,d=K,w=X,O=Y;return p(),b(O,null,{default:l(()=>[r(w,{span:24},{default:l(()=>[r(d,k({class:"flex pb-2 nc-barcode-value-column-select flex-row",label:o.$t("labels.barcodeValueColumn")},t(c).fk_barcode_value_column_id),{default:l(()=>[E("div",Z,[r(n,{value:t(a).fk_barcode_value_column_id,"onUpdate:value":e[0]||(e[0]=u=>t(a).fk_barcode_value_column_id=u),options:t(m),placeholder:"Select a column for the Barcode value","not-found-content":"No valid Column Type can be found.",onClick:e[1]||(e[1]=C(()=>{},["stop"]))},null,8,["value","options"]),t(T)?(p(),P("div",ee,[r(h,{placement:"bottom"},{title:l(()=>[oe]),default:l(()=>[(p(),b($(t(j).info),{class:"cursor-pointer"}))]),_:1})])):U("",!0)])]),_:1},16,["label"]),r(d,k({class:"flex w-1/2 pb-2 nc-barcode-format-select",label:o.$t("labels.barcodeFormat")},t(c).barcode_format),{default:l(()=>[r(n,{value:t(a).meta.barcodeFormat,"onUpdate:value":e[2]||(e[2]=u=>t(a).meta.barcodeFormat=u),options:_,placeholder:"Select a Barcode format",onClick:e[3]||(e[3]=C(()=>{},["stop"]))},null,8,["value"])]),_:1},16,["label"])]),_:1})]),_:1})}}});export{ze as default};
