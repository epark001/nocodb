import{a as B,f as J}from"./useMetas.223da623.js";import{cb as K,$ as E,r as U,g8 as M,J as m,K as y,g0 as j,f as N}from"./entry.13466615.js";import{R as q,b as z}from"./index.5263eb1d.js";import{u as C}from"./useSharedView.746b4f21.js";import{a as F}from"./useSmartsheetStore.9bdf3b91.js";import{u as G}from"./index.e7cf7635.js";function D(i,_){const{sharedView:V}=C(),{sorts:e,eventBus:O}=F(),{$api:c,$e:o}=N(),{isUIAllowed:w}=G(),{isSharedBase:x}=K(B()),{addUndo:b,clone:f,defineViewScope:p}=J(),v=E(q),T=E(z,U(!1)),g=U([]);M(e,t=>{g.value=f(t)});const P=async()=>{var t;if(T.value){const s=((t=V.value)==null?void 0:t.sorts)||[];e.value=[...s];return}try{if(!w("sortSync")||!(i!=null&&i.value))return;e.value=(await c.dbTableSort.list(i.value.id)).list}catch(s){console.error(s),m.error(await y(s))}},L=(t,s)=>Object.entries(s).filter(([r,u])=>t[r]!==u&&r in t).reduce((r,[u,a])=>({...r,[u]:a}),{}),h=async(t,s,r=!1)=>{var u;if(!r){const a=g.value[s];if(a){const l=f(L(t,a));Object.keys(l).length>0&&b({undo:{fn:(S,d)=>{const n=e.value[s];n&&(n[S]=d,h(n,s,!0))},args:[Object.keys(l)[0],Object.values(l)[0]]},redo:{fn:(S,d)=>{const n=e.value[s];n&&(n[S]=d,h(n,s,!0))},args:[Object.keys(l)[0],t[Object.keys(l)[0]]]},scope:p({view:i.value})})}}if(T.value||x.value){e.value[s]=t,e.value=[...e.value],v==null||v.trigger();return}try{w("sortSync")&&(t.id?(await c.dbTableSort.update(t.id,t),o("sort-updated")):e.value[s]=await c.dbTableSort.create((u=i.value)==null?void 0:u.id,t)),_==null||_(),o("a:sort:dir",{direction:t.direction})}catch(a){console.error(a),m.error(await y(a))}g.value=f(e.value)},$=async({direction:t,column:s,reloadDataHook:r})=>{var u;try{o("a:sort:add",{from:"column-menu"});const a=e.value.findIndex(d=>d.fk_column_id===s.id),l=a>-1?e.value[a]:void 0;l&&(await c.dbTableSort.delete(l.id),o("a:sort:delete"));const S=await c.dbTableSort.create((u=i.value)==null?void 0:u.id,{fk_column_id:s.id,direction:t,push_to_top:!0});e.value=[...e.value.filter((d,n)=>n!==a),S],b({redo:{fn:async function(){var A;const n=await c.dbTableSort.create((A=i.value)==null?void 0:A.id,{fk_column_id:s.id,direction:t,push_to_top:!0});this.undo.args=[n.id],O.emit(j.SORT_RELOAD),r==null||r.trigger()},args:[]},undo:{fn:async function(n){await c.dbTableSort.delete(n),O.emit(j.SORT_RELOAD),r==null||r.trigger()},args:[S.id]},scope:p({view:i.value})}),O.emit(j.SORT_RELOAD),r==null||r.trigger()}catch(a){console.error(a),m.error(await y(a))}};async function R(t,s,r=!1){try{w("sortSync")&&t.id&&!T.value&&!x.value&&await c.dbTableSort.delete(t.id),e.value.splice(s,1),e.value=[...e.value],r||b({redo:{fn:async()=>{await R(t,s,!0)},args:[]},undo:{fn:()=>{e.value.splice(s,0,t),h(t,s,!0)},args:[f(t),s]},scope:p({view:i.value})}),g.value=f(e.value),v==null||v.trigger(),o("a:sort:delete")}catch(u){console.error(u),m.error(await y(u))}}const I=(t=!1,s)=>{var r;e.value=[...e.value,{fk_column_id:s==null?void 0:s.id,direction:"asc"}],o("a:sort:add",{length:(r=e==null?void 0:e.value)==null?void 0:r.length}),t||b({undo:{fn:async()=>{await R(e.value[e.value.length-1],e.value.length-1,!0)},args:[]},redo:{fn:()=>{I(!0)},args:[]},scope:p({view:i.value})}),g.value=f(e.value)};return{sorts:e,loadSorts:P,addSort:I,deleteSort:R,saveOrUpdate:h,insertSort:$}}export{D as u};
